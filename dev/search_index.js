var documenterSearchIndex = {"docs":
[{"location":"references/#References","page":"References","title":"References","text":"","category":"section"},{"location":"references/","page":"References","title":"References","text":"AIChE/CCPS. 1999. Guidelines for Consequence Analysis of Chemical Releases. New York: American Institute of Chemical Engineers","category":"page"},{"location":"references/","page":"References","title":"References","text":"Bakkum, E.A. and N.J. Duijm. 2005. \"Chapter 4 - Vapour Cloud Dispersion\" in Methods for the Calculation of Physical Effects, CPR 14E (TNO Yellow Book) Edited by C.J.H. van den Bosch and R.A.P.M. Weterings. The Netherlands.","category":"page"},{"location":"references/","page":"References","title":"References","text":"Briggs, Gary A. 1969. Plume Rise Oak Ridge: U.S. Atomic Energy Commission","category":"page"},{"location":"references/","page":"References","title":"References","text":"Briggs, Gary A. 1973. Diffusion Estimation for Small Emissions. Preliminary Report. United States. doi:10.2172/5118833","category":"page"},{"location":"references/","page":"References","title":"References","text":"Britter, Rex E. and J. McQuaid. 1988. Workbook on the Dispersion of Dense Gases. HSE Contract Research Report No. 17/1988","category":"page"},{"location":"references/","page":"References","title":"References","text":"Ermak, Donald L. 1990. User's Manual for SLAB: An Atmospheric Dispersion Model For Denser-Than-Air Releases Lawrence Livermore National Laboratory","category":"page"},{"location":"references/","page":"References","title":"References","text":"US EPA. 1995. User's Guide for the Industrial Source Complex (ISC3) Dispersion Models EPA-454/B-95-003b, vol 2. Research Triangle Park, NC: Office of Air Quality Planning and Standards","category":"page"},{"location":"references/","page":"References","title":"References","text":"Griffiths, R. F. 1994. \"Errors in the use of the Briggs parameterization for atmospheric dispersion coefficients.\" Atmospheric Environment 28(17):2861-2865 doi:10.1016/1352-2310(94)90086-8","category":"page"},{"location":"references/","page":"References","title":"References","text":"Lees, Frank P. 1996. Loss Prevention in the Process Industries, 2nd ed. Oxford: Butterworth-Heinemann","category":"page"},{"location":"references/","page":"References","title":"References","text":"Long, V.D. 1963. \"Estimation of the Extent of Hazard Areas Round a Vent.\" Chem. Process Hazard. II:6","category":"page"},{"location":"references/","page":"References","title":"References","text":"Pasquill, Frank. 1974. Atmospheric Diffusion, 2nd Ed. New York: Halstead Press, New York","category":"page"},{"location":"references/","page":"References","title":"References","text":"Spicer, Thomas O. and Jerry A. Havens. 1988. Development of Vapor Dispersion Models for Non-Neutrally Buoyant Gas Mixtures–Analysis of TFI/NH3 Test Data. Tyndall Air Force Base, FL: USAF Engineering & Services Laboratory","category":"page"},{"location":"references/","page":"References","title":"References","text":"Seinfeld, John H. 1986. Atmospheric Chemistry and Physics of Air Pollution. New York: John Wiley and Sons","category":"page"},{"location":"references/","page":"References","title":"References","text":"Turner, D. Bruce. 1970. Workbook of Atmospheric Dispersion Estimates. United States Environmental Protection Agency.","category":"page"},{"location":"equation_sets/#Equation-Sets","page":"Equation Sets","title":"Equation Sets","text":"","category":"section"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"The various dispersion models each depend upon several parameters which are themselves, often, correlations. For any given parameter there are several different correlations in the literature. To make this more transparent, sets of correlations from standard texts have been prepared (in addition to the default correlations), allowing the user to specify which set to use.","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"Not all equation sets cover all of the possible correlations, unless otherwise specified the default correlations are used. Some models use internal models for the wind profile and dispersion, in such cases changing the equation set has no effect.","category":"page"},{"location":"equation_sets/#Windspeed","page":"Equation Sets","title":"Windspeed","text":"","category":"section"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"For SimpleAtmospheres the windspeed is determined using a power-law relationship:","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":" u = u_R left( z over z_R right)^p","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"There are five equation sets that give p as a function of stability class","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"DefaultSet – see the defition in release scenarios\nCCPSRural – AIChE/CCPS 1999\nCCPSUrban – AIChE/CCPS 1999\nISC3Rural – US EPA 1995\nISC3Urban – US EPA 1995","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"Stability Class DefaultSet CCPSRural CCPSUrban ISC3Rural ISC3Urban\nA 0.108 0.07 0.15 0.07 0.15\nB 0.112 0.07 0.15 0.07 0.15\nC 0.120 0.10 0.20 0.10 0.20\nD 0.142 0.15 0.25 0.15 0.25\nE 0.203 0.35 0.40 0.35 0.30\nF 0.253 0.55 0.60 0.55 0.30","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"note: Note\nThe CCPS and ISC3 correlations both use the same parameters for Rural settings but differ for Urban settings with stable atmospheres (class E and F) ","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"using ..GasDispersion\nusing Plots\n\nu0, z0 = 1, 1\nzs = 0:.1:10\n\nfor class in [ClassA,ClassB,ClassC,ClassD,ClassE,ClassF]\n    p = plot(title=\"Windspeed for $class stability\",ylabel=\"Relative Elevation (z/z_R)\", xlabel=\"Relative Windspeed (u/u_R)\")\n\n    for eqn in [DefaultSet,CCPSRural,CCPSUrban,ISC3Rural,ISC3Urban]\n        u = [ GasDispersion._windspeed(u0,z0,z,class,eqn) for z in zs ]\n        plot!(p,zs,u,label=eqn)\n    end\n\n    savefig(p,\"$(class)_windspeed.svg\")\n\nend\n\nnothing","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"equation_sets/#Plume-Dispersion","page":"Equation Sets","title":"Plume Dispersion","text":"","category":"section"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"Plume dispersion parameters, sigma_y and sigma_z are functions of downwind distance and can take many different forms from simple power-law relations to complex piece-wise functions.","category":"page"},{"location":"equation_sets/#Crosswind-Dispersion","page":"Equation Sets","title":"Crosswind Dispersion","text":"","category":"section"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"There are seven equation sets that set correlations for the crosswind dispersion.","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"DefaultSet – see the defition in plume models\nCCPSRural – AIChE/CCPS 1999\nCCPSUrban – AIChE/CCPS 1999\nISC3Rural – US EPA 1995\nISC3Urban – US EPA 1995\nTNO – These are the correlations given in the TNO Yellow Book (Bakkum and Duijm 2005)\nTurner – A set of digitized curves based on Turner (1970), as presented in Lees 1996","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"using ..GasDispersion\nusing Plots\n\nxs = range(1,1e5,1000)\n\nfor class in [ClassA,ClassB,ClassC,ClassD,ClassE,ClassF]\n    p = plot(title=\"Crosswind Dispersion for $class stability\",ylabel=\"Crosswind Dispersion, m\", xlabel=\"Downwind distance, m\", xaxis=:log10, yaxis=:log10, legend=:bottomright)\n\n    for eqn in [DefaultSet,CCPSRural,CCPSUrban,ISC3Rural,ISC3Urban,TNO,Turner]\n        s = [ GasDispersion.crosswind_dispersion(x, Plume, class, eqn) for x in xs ]\n        plot!(p,xs,s,label=eqn)\n    end\n\n    savefig(p,\"$(class)_plume_sigma_y.svg\")\n\nend\n\nnothing","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"equation_sets/#Vertical-Dispersion","page":"Equation Sets","title":"Vertical Dispersion","text":"","category":"section"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"There are seven equation sets that set correlations for the crosswind dispersion.","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"DefaultSet – see the defition in plume models\nCCPSRural – AIChE/CCPS 1999\nCCPSUrban – AIChE/CCPS 1999\nISC3Rural – US EPA 1995\nISC3Urban – US EPA 1995\nTNO – These are the correlations given in the TNO Yellow Book (Bakkum and Duijm 2005)\nTurner – A set of digitized curves based on Turner (1970), as presented in Lees 1996","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"note: Corrections\nThe CCPS correlations for the vertical plume dispersion, sigma_z, in urban terrain  contains two typos. These have been corrected as per Griffiths (1994).","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"using ..GasDispersion\nusing Plots\n\nxs = range(1,1e5,1000)\n\nfor class in [ClassA,ClassB,ClassC,ClassD,ClassE,ClassF]\n    p = plot(title=\"Vertical Dispersion for $class stability\",ylabel=\"Vertical Dispersion, m\", xlabel=\"Downwind distance, m\", xaxis=:log10, yaxis=:log10, legend=:bottomright)\n\n    for eqn in [DefaultSet,CCPSRural,CCPSUrban,ISC3Rural,ISC3Urban,TNO,Turner]\n        s = [ GasDispersion.vertical_dispersion(x, Plume, class, eqn) for x in xs ]\n        plot!(p,xs,s,label=eqn)\n    end\n\n    savefig(p,\"$(class)_plume_sigma_z.svg\")\n\nend\n\nnothing","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"equation_sets/#Puff-Dispersion","page":"Equation Sets","title":"Puff Dispersion","text":"","category":"section"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"Puff dispersion parameters, sigma_x, sigma_y and sigma_z are functions of the downwind distance to the cloud (puff) center and are generally given as power law relations. There are many fewer sources for these.","category":"page"},{"location":"equation_sets/#Downwind-Dispersion","page":"Equation Sets","title":"Downwind Dispersion","text":"","category":"section"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"There are four equation sets that set correlations for the downwind dispersion.","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"DefaultSet – see the defition in plume models\nCCPSRural – AIChE/CCPS 1999\nCCPSUrban – AIChE/CCPS 1999\nTNO – These are the correlations given in the TNO Yellow Book (Bakkum and Duijm 2005)","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"Though in practice there are only two: the CCPS correlations do not distinguish between urban and rural locations for puff dispersion, and the default correlations are the CCPS correlations.","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"using ..GasDispersion\nusing Plots\n\nxs = range(1,1e5,1000)\n\nfor class in [ClassA,ClassB,ClassC,ClassD,ClassE,ClassF]\n    p = plot(title=\"Downwind Dispersion for $class stability\",ylabel=\"Downwind Dispersion, m\", xlabel=\"Downwind distance, m\", xaxis=:log10, yaxis=:log10, legend=:bottomright)\n\n    for eqn in [DefaultSet,CCPSRural,CCPSUrban,TNO]\n        s = [ GasDispersion.downwind_dispersion(x, Puff, class, eqn) for x in xs ]\n        plot!(p,xs,s,label=eqn)\n    end\n\n    savefig(p,\"$(class)_puff_sigma_x.svg\")\n\nend\n\nnothing","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"equation_sets/#Crosswind-Dispersion-2","page":"Equation Sets","title":"Crosswind Dispersion","text":"","category":"section"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"There are four equation sets that set correlations for the crosswind dispersion.","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"DefaultSet – see the defition in plume models\nCCPSRural – AIChE/CCPS 1999\nCCPSUrban – AIChE/CCPS 1999\nTNO – These are the correlations given in the TNO Yellow Book (Bakkum and Duijm 2005)","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"Though in practice there are only two: the CCPS correlations do not distinguish between urban and rural locations for puff dispersion, and the default correlations are the CCPS correlations.","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"using ..GasDispersion\nusing Plots\n\nxs = range(1,1e5,1000)\n\nfor class in [ClassA,ClassB,ClassC,ClassD,ClassE,ClassF]\n    p = plot(title=\"Crosswind Dispersion for $class stability\",ylabel=\"Crosswind Dispersion, m\", xlabel=\"Downwind distance, m\", xaxis=:log10, yaxis=:log10, legend=:bottomright)\n\n    for eqn in [DefaultSet,CCPSRural,CCPSUrban,TNO]\n        s = [ GasDispersion.crosswind_dispersion(x, Puff, class, eqn) for x in xs ]\n        plot!(p,xs,s,label=eqn)\n    end\n\n    savefig(p,\"$(class)_puff_sigma_y.svg\")\n\nend\n\nnothing","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"equation_sets/#Vertical-Dispersion-2","page":"Equation Sets","title":"Vertical Dispersion","text":"","category":"section"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"There are four equation sets that set correlations for the vertical dispersion.","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"DefaultSet – see the defition in plume models\nCCPSRural – AIChE/CCPS 1999\nCCPSUrban – AIChE/CCPS 1999\nTNO – These are the correlations given in the TNO Yellow Book (Bakkum and Duijm 2005)","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"Though in practice there are only two: the CCPS correlations do not distinguish between urban and rural locations for puff dispersion, and the default correlations are the CCPS correlations.","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"using ..GasDispersion\nusing Plots\n\nxs = range(1,1e5,1000)\n\nfor class in [ClassA,ClassB,ClassC,ClassD,ClassE,ClassF]\n    p = plot(title=\"Vertical Dispersion for $class stability\",ylabel=\"Vertical Dispersion, m\", xlabel=\"Downwind distance, m\", xaxis=:log10, yaxis=:log10, legend=:bottomright)\n\n    for eqn in [DefaultSet,CCPSRural,CCPSUrban,TNO]\n        s = [ GasDispersion.vertical_dispersion(x, Puff, class, eqn) for x in xs ]\n        plot!(p,xs,s,label=eqn)\n    end\n\n    savefig(p,\"$(class)_puff_sigma_z.svg\")\n\nend\n\nnothing","category":"page"},{"location":"equation_sets/","page":"Equation Sets","title":"Equation Sets","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"plume/#Plume-Models","page":"Plume Models","title":"Plume Models","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Plume models are models of continuous, steady-state, releases and are time independent, this includes, for example, emissions from elevated stacks.","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"plume","category":"page"},{"location":"plume/#GasDispersion.plume","page":"Plume Models","title":"GasDispersion.plume","text":"plume(scenario::Scenario, model::PlumeModel[, equationset::EquationSet])\n\nRuns the plume dispersion model on the given scenario and returns the solution which is callable to give the concentration     c(x, y, z[, t])\n\nThe concentration is in vol fraction, if model is unspecified, defaults to a simple gaussian plume model.\n\nequationsets are used to specify that an alternative set of correlations  should be used for model parameters, if alternatives exist.\n\nAll model parameters are assumed to be in SI base units (i.e. distances in m, velocities in m/s, mass in kg, etc.)\n\n\n\n\n\n","category":"function"},{"location":"plume/#Gaussian-Plumes","page":"Plume Models","title":"Gaussian Plumes","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"plume(::Scenario{Substance,VerticalJet,Atmosphere}, ::Type{GaussianPlume})","category":"page"},{"location":"plume/#GasDispersion.plume-Tuple{Scenario{Substance, VerticalJet, Atmosphere}, Type{GaussianPlume}}","page":"Plume Models","title":"GasDispersion.plume","text":"plume(::Scenario, GaussianPlume[, ::EquationSet]; kwargs...)\n\nReturns the solution to a Gaussian plume dispersion model for the given scenario.\n\ncleft(xyzright) = Q_i over  2 pi sigma_y sigma_z u  \nexp left -frac12 left( y over sigma_y right)^2 right \ntimes left exp left -frac12 left(  z -h  over sigma_z right)^2 right\n+ exp left -frac12 left(  z + h  over sigma_z right)^2 right right\n\nwhere the σs are dispersion parameters correlated with the distance x. The  EquationSet defines the set of correlations used to calculate the dispersion  parameters.\n\nReferences\n\nAIChE/CCPS. 1999. Guidelines for Consequence Analysis of Chemical Releases. New York: American Institute of Chemical Engineers\n\n\n\n\n\nplume(::Scenario{Substance,VerticalJet,Atmosphere}, GaussianPlume[, ::EquationSet]; kwargs...)\n\nReturns the solution to a Gaussian plume dispersion model for a vertical jet. By default the Briggs plume rise model is used.\n\ncleft(xyzright) = Q_i over  2 pi sigma_y sigma_z u  \nexp left -frac12 left( y over sigma_y right)^2 right \ntimes left exp left -frac12 left(  z -h  over sigma_z right)^2 right\n+ exp left -frac12 left(  z + h  over sigma_z right)^2 right right\n\nwhere the σs are dispersion parameters correlated with the distance x. The  EquationSet defines the set of correlations used to calculate the dispersion  parameters.\n\nArguments\n\ndownwash::Bool=false: when true, includes stack-downwash effects\nplumerise::Bool=true: when true, includes plume-rise effects using Briggs' model\n\nReferences\n\nAIChE/CCPS. 1999. Guidelines for Consequence Analysis of Chemical Releases. New York: American Institute of Chemical Engineers\nBriggs, Gary A. 1969. Plume Rise Oak Ridge: U.S. Atomic Energy Commission\n\n\n\n\n\n","category":"method"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"The gaussian plume model assumes that concentration profile in the crosswind (y) and vertical (z) directions follow gaussian distributions with dispersions sigma_y and sigma_z, respectively. This model can be derived from an advection-diffusion equation, or simply taken as a given.","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"The basic gaussian would have the plume expand downward beyond the ground, to correct for this an additional term for ground reflection is added. This is equivalent to adding a mirror image source reflected across the x-z plane, and causes mass to accumulate along the ground instead of simply disappearing (as would happen in the naive case).","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"The concentration is then given by:","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"\n c = Q_i over 2 pi u sigma_y sigma_z \nexp left -frac12 left( y over sigma_y right)^2 right\nleft exp left -frac12 left(  z -h  over sigma_z right)^2 right + exp left -frac12 left(  z + h  over sigma_z right)^2 right right \n","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"with","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"c  - concentration, volume fraction\nQ_i  - volumetric emission rate of the species, m^3/s\nu - windspeed, m/s\nsigma_y  - crosswind dispersion, m\nsigma_z  - vertical dispersion, m\nh - release elevation, m","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Three important parameters are determined from correlations, which are functions of the atmospheric stability: the windspeed at the release point, the crosswind dispersion, and the vertical dispersion.","category":"page"},{"location":"plume/#Crosswind-dispersion-correlations","page":"Plume Models","title":"Crosswind dispersion correlations","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"The crosswind dispersion, sigma_y is a function of downwind distance, x as well as stability class","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"\n sigma_y = delta x^beta \n","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Where delta, beta, and gamma are tabulated based on stability class (Spicer and Havens 1988, 112):","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Stability Class delta beta\nA 0.423 0.9\nB 0.313 0.9\nC 0.210 0.9\nD 0.136 0.9\nE 0.102 0.9\nF 0.0674 0.9","category":"page"},{"location":"plume/#Vertical-dispersion-correlations","page":"Plume Models","title":"Vertical dispersion correlations","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"The vertical dispersion, sigma_z is a function of downwind distance, x as well as stability class","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"\n sigma_z = delta x^beta exp left( gamma left( ln x right)^2 right)\n","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Where delta and beta are tabulated based on stability class (Seinfeld 1986)","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Stability Class delta beta gamma\nA 107.7 -1.7172 0.2770\nB 0.1355 0.8752 0.0136\nC 0.09623 0.9477 -0.0020\nD 0.04134 1.1737 -0.0316\nE 0.02275 1.3010 -0.0450\nF 0.01122 1.4024 -0.0540","category":"page"},{"location":"plume/#Example","page":"Plume Models","title":"Example","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Suppose we wish to model the dispersion of gaseous propane from a leak from a storage tank, where the leak is from a 10mm hole that is 3.5m above the ground and the propane is at 25°C and 4barg. Assume the discharge coefficient c_D = 085. This scenario is adapted from CCPS Guidelines for Consequence Analysis of Chemical Releases(AIChE/CCPS 1999, 47)","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"First we define the scenario","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"using GasDispersion\n\npropane = Substance(name=\"propane\",\n              molar_weight=0.044096,     # kg/mol\n              liquid_density=526.13,     # kg/m³\n              k=1.142,\n              boiling_temp=231.02,       # K\n              latent_heat=425740,        # J/kg\n              gas_heat_capacity=1678,    # J/kg/K\n              liquid_heat_capacity=2520) # J/kg/K\n\nPatm = 101325 # Pa\nP1 = 4e5 + Patm # Pa\nT1 = 25 + 273.15 # K\n\nscn = scenario_builder(propane, JetSource; \n       phase = :gas,\n       diameter = 0.01,  # m\n       dischargecoef = 0.85,\n       temperature = T1, # K\n       pressure = P1,    # Pa\n       height = 3.5)     # m, height of hole above the ground","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"And then pass it to the plume function","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"g = plume(scn, GaussianPlume)","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Where g is a callable which returns the concentration (in vol fraction) at any point. For example at 100m downwind and at a height of 2m","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"g(100,0,2)\n\n# output\n\n0.0002006455298894473\n","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Which is ~200ppm (vol). Beyond simply having a number, we may want a plan-view of the plume at a given height, say 2m.","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"using ..GasDispersion\n\npropane = Substance(name=\"propane\",\n              molar_weight=0.044096,     # kg/mol\n              liquid_density=526.13,     # kg/m³\n              k=1.142,\n              boiling_temp=231.02,       # K\n              latent_heat=425740,        # J/kg\n              gas_heat_capacity=1678,    # J/kg/K\n              liquid_heat_capacity=2520) # J/kg/K\n\nPatm = 101325 # Pa\nP1 = 4e5 + Patm # Pa\nT1 = 25 + 273.15 # K\n\nscn = scenario_builder(propane, JetSource; \n       phase = :gas,\n       diameter = 0.01,  # m\n       dischargecoef = 0.85,\n       temperature = T1, # K\n       pressure = P1,    # Pa\n       height = 3.5)     # m, height of hole above the ground\n\ng = plume(scn, GaussianPlume)","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"using Plots\n\nplot(g, xlims=(0,100), ylims=(-10,10), height=2)","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"We might want instead to look at the concentration at the release height: 3.5 m, zoom in, and look at concentrations in the vicinity of the LEL.","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"LEL = 0.021 # v/v, LEL from CAMEO Chemicals\nUEL = 0.095 # v/v, UEL from CAMEO Chemicals\n\nplot(g, xlims=(0,100), ylims=(-5,5), height=3.5, clims=(0,LEL))","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"These plan views stretch out the crosswind distance, but we can change the aspect ratio, to give a sense of how skinny the plume actually is","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"plot(g, xlims=(0,50), ylims=(-10,10), height=3.5, clims=(0,LEL),\n     aspect_ratio=:equal)","category":"page"},{"location":"plume/#Simple-Jet-Plumes","page":"Plume Models","title":"Simple Jet Plumes","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"plume(::Scenario, ::Type{SimpleJet})","category":"page"},{"location":"plume/#GasDispersion.plume-Tuple{Scenario, Type{SimpleJet}}","page":"Plume Models","title":"GasDispersion.plume","text":"plume(::Scenario, SimpleJet; kwargs...)\n\nReturns the solution to a simple turbulent jet dispersion model for the given scenario.\n\ncleft(xyzright) = k_2 c_0 left( d over z right) sqrt rho_j over rho_a \nexp left( - left( k_3  r over z  right)^2 right)\n\nwhere r is the radial distance from the jet centerline. Assumes a circular jet with diameter equal to the jet diameter. Ground-reflection is included by method of images.\n\nReferences\n\nLong, V.D. 1963. \"Estimation of the Extent of Hazard Areas Round a Vent.\" Chem. Process Hazard. II:6\n\nArguments\n\nrelease_angle::Number=0: the angle at which the jet is released, in radians\nk2::Number=6 parameter of the model, default value is recommended by Long\nk3::Number=5 parameter of the model, default value is recommended by Long\n\n\n\n\n\n","category":"method"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Simple jet dispersion models are a useful tool for evaluating dispersion near the region where a jet release is occurring. They are based on a simplified model where the air is stationary and all of the momentum needed to mix the release is supplied by the jet. This is in some ways the opposite assumptions than are used in the Gaussian Plume model – where the release is assumed to have negligible velocity and the momentum is entirely supplied by the wind.","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"c = k_2 c_0 left( d over z right) sqrt rho_j over rho_a  exp left( - left( k_3  y over x  right)^2 right) left exp left( - left( k_3  (z-h) over x right)^2 right) + exp left( - left( k_3  (z+h) over x right)^2 right) right","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"with","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"c - concentration, volume fraction\nk_2 and k_3 - model parameters\nc_0 - initial concentration, volume fraction\nd - diameter of the jet, m\nrho_j - initial density of the jet material, kg/m^3\nrho_a - density of the ambient atmosphere, kg/m^3","category":"page"},{"location":"plume/#Model-Parameters","page":"Plume Models","title":"Model Parameters","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"The model parameters k_2 and k_3 are per Long (1963)","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":" \nk_2 6.0\nk_3 5.0","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"the initial concentration is calculated from the mass flowrate and volumetric flowrate","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":" c_0 =  Q_i over Q  =  dotm over rho Q  =  dotm over  rho fracpi4 d^2 u   ","category":"page"},{"location":"plume/#Example-2","page":"Plume Models","title":"Example","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Suppose we wish to model the dispersion of gaseous propane using the same scenario, scn, worked out above.","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"j = plume(scn, SimpleJet)\nj(100,0,2)\n\n# output\n\n0.002485496609730624\n","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"j = plume(scn, SimpleJet) # hide\nplot(j, xlims=(0,100), ylims=(-10,10), height=2)","category":"page"},{"location":"plume/#Britter-McQuaid-Model","page":"Plume Models","title":"Britter-McQuaid Model","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"plume(::Scenario, ::Type{BritterMcQuaidPlume})","category":"page"},{"location":"plume/#GasDispersion.plume-Tuple{Scenario, Type{BritterMcQuaidPlume}}","page":"Plume Models","title":"GasDispersion.plume","text":"plume(::Scenario, BritterMcQuaidPlume[, equationset::EquationSet])\n\nReturns the solution to the Britter-McQuaid continuous ground level release model for the given scenario.\n\nThe equationset is used to calculate the windspeed at 10m, all other  correlations are as per the Britter-McQuaid model. Unless otherwise specified a default power-law wind profile is used.\n\nReferences\n\nBritter, Rex E. and J. McQuaid. 1988. Workbook on the Dispersion of Dense Gases. HSE Contract Research Report No. 17/1988\nAIChE/CCPS. 1999. Guidelines for Consequence Analysis of Chemical Releases. New York: American Institute of Chemical Engineers\n\n\n\n\n\n","category":"method"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"The Britter-McQuaid model is based on the Workbook on the Dispersion of Dense Gases(Britter and McQuaid 1988) which uses a series of correlations relating maximum center-line concentrations to downwind distances based upon actual releases. The model of the plume is a series of rectangular slices with constant, average, concentration throughout – giving a \"top-hat\" model. Points outside the defined plume are assumed to have zero concentration.","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"The original workbook gives the correlations as simply curves on a page, this model uses digitizations of those correlations(AIChE/CCPS 1999, 118)","category":"page"},{"location":"plume/#Example-3","page":"Plume Models","title":"Example","text":"","category":"section"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"This example is based on the Burro LNG dispersion results, in which LNG was released at ground-level, as given in Guidelines for Consequence Analysis (AIChE/CCPS 1999, 122):","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"release temperature: -162°C\nrelease rate: 0.23 m³/s (liquid)\nrelease duration: 174 s\nwindspeed at 10m: 10.9 m/s\nLNG liquid density (at release conditions): 425.6 kg/m³\nLNG gas density (at release conditions): 1.76 kg/m³","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"and we assume the atmosphere was otherwise at ambient conditions of 298K and 1atm.","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"using GasDispersion\n\nlng = Substance(name = :LNG,\n              molar_weight = 0.01604, # kg/mol, Methane\n              gas_density = 1.76,\n              liquid_density = 425.6,\n              reference_temp=(273.15-162),\n              reference_pressure=101325.0,\n              boiling_temp = 111.6, # Methane, NIST Webbook\n              latent_heat = 509880.0,  # J/kg, Methane\n              gas_heat_capacity = 2240.0, # J/kg/K, Methane\n              liquid_heat_capacity = 3349.0) # J/kg/K, Methane\n\nṁ = 0.23*lng.ρ_l # liquid spill rate times liquid density\nQ = ṁ/lng.ρ_g    # gas volumetric flowrate\n\nd = 1\nA = (π/4)*(d)^2 # release area, assuming a diameter of 1m.\nu = Q/A         # initial jet velocity\n\nr = HorizontalJet( mass_rate = ṁ,\n                  duration = 174,\n                  diameter = d,\n                  velocity = u,\n                  height = 0.0,\n                  pressure = 101325.0,\n                  temperature = (273.15-162),\n                  fraction_liquid = 0.0)\n\na = SimpleAtmosphere(windspeed=10.9, temperature=298, stability=ClassF)\n\nscn = Scenario(lng,r,a)","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"Generating a solution using the Britter-McQuaid model is quite simple","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"bm = plume(scn, BritterMcQuaidPlume)\n\nbm(367,0,0)\n\n# output\n\n0.050717667650511944\n","category":"page"},{"location":"plume/","page":"Plume Models","title":"Plume Models","text":"From the reference, we expect the concentration to be ~5%, which is within acceptable margins given the imprecision that comes with using correlations (especially with pencil and paper).","category":"page"},{"location":"scenarios/#Release-Scenarios","page":"Release Scenarios","title":"Release Scenarios","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"GasDispersion.jl is centered around modeling the effects of chemical release scenarios, as such the core data structure is the Scenario. A Scenario is a container for all of the information that a model may need to produce a solution. The intention is for the Scenario to be re-usable, so that the user may run the same scenario with multiple models and have an \"apples to apples\" comparison of the performance of those models.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"A scenario is composed of three basic parts: ","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"a Substance – the chemical substance being released\na Release – the actual event taking place, such as a jet of liquid or emissions from a stack \nan Atmosphere – the environment into which the substance is being released","category":"page"},{"location":"scenarios/#Substances","page":"Release Scenarios","title":"Substances","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Substance","category":"page"},{"location":"scenarios/#GasDispersion.Substance","page":"Release Scenarios","title":"GasDispersion.Substance","text":"Substance{N,VAP,D_G,D_L,F,H,CP_G,CP_L}(;kwargs...)\n\nA simple container for the physical and thermal properties of substances.\n\nvapor_pressure, latent_heat, gas_heat_capacity, and liquid_heat_capacity can be functions of temperature (in Kelvin) or constants.\n\ngas_density and liquid_density can be functions of temperature (in Kelvin) and pressure (in Pascal) or constants.\n\nArguments\n\nname<:Union{AbstractString,Symbol}: the name of the substance\nmolar_weight::Number: the molar weight, kg/mol\nvapor_pressure<:Union{Number,Function,Nothing}=nothing: the vapor pressure, Pa. If nothing then the Clausius-Clapeyron equation is used to derive a vapor pressure curve\ngas_density<:Union{Number,Function,Nothing}=nothing: the gas density, kg/m³. If nothing the ideal gas law is used.\nliquid_density<:Union{Number,Function}: the liquid density, kg/m³.\nreference_temp::Number=288.15: the reference temperature for the given properties, K.\nreference_pressure::Number=101325: the reference pressure for the given properties, Pa.\nk::Number=1.4: the isentropic expansion factor, cp/cv, unitless.\nboiling_temp<:Union{Number,Function}::Number: the normal boiling temperature, K.\nlatent_heat<:Union{Number,Function}: the latent heat of vaporization, J/kg.\ngas_heat_capacity<:Union{Number,Function}: the gas heat capacity, J/kg/K.\nliquid_heat_capacity<:Union{Number,Function}: the liquid heat capacity, J/kg/K.\n\n\n\n\n\n","category":"type"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"A substance is defined using the Substance type, this is a container for the physical properties of the substance. The container is not, by default, unit-aware and assumes that all properties are in the SI base units, e.g. temperatures are in Kelvin, pressures in Pascal, etc.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"As an example, here is a minimal implementation of propane:","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"\nusing GasDispersion\n\ns = Substance(name=\"propane\",\n              molar_weight=0.044096,     # kg/mol\n              liquid_density=526.13,     # kg/m³\n              boiling_temp=231.02,       # K\n              latent_heat=425740,        # J/kg\n              gas_heat_capacity=1678,    # J/kg/K\n              liquid_heat_capacity=2520) # J/kg/K\n\n# output\n\nSubstance: propane\n    MW: 0.044096 kg/mol\n    P_v: GasDispersion.Antoine{Float64}(9.773719865868816, 2257.9247634130143, 0.0) Pa\n    ρ_g: 1.864931992847327 kg/m^3\n    ρ_l: 526.13 kg/m^3\n    T_ref: 288.15 K\n    P_ref: 101325.0 Pa\n    k: 1.4\n    T_b: 231.02 K\n    Δh_v: 425740 J/kg\n    Cp_g: 1678 J/kg/K\n    Cp_l: 2520 J/kg/K\n","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Note that the Substance has filled in some missing details. In particular it has calculateed the gas density ρ_g` at the reference point using the ideal gas law and has used the Clausius-Clapeyron equation to derive a vapour pressure curve from the latent heat and the boiling temperature. It has also used a default value of 1.4 for isentropic expansion factor","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"In general several of the physical properties are functions of temperature and/or pressure, and they can be given as such. Since substances are re-usable, once defined they can be reused with many different scenarios, it may be worthwhile to find appropriate correlations for all of the physical and thermal properties of a substance. That said, it is not necessary.","category":"page"},{"location":"scenarios/#Vapor-Pressure","page":"Release Scenarios","title":"Vapor Pressure","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"The vapor_pressure can be given as a constant, a function of temperature, or omitted entirely and the Clausius-Clapeyron equation will be used to derive a vapour pressure curve automatically.","category":"page"},{"location":"scenarios/#Densities","page":"Release Scenarios","title":"Densities","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"The liquid_density and gas_density can be either constants, in which case the liquid density is assumed to be always constant and the gas density scaled using the ideal gas law (assuming the given gas density is at the reference temperature and pressure). Or they can be given as a function of temperature and pressure.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"If the gas_density is omitted then the ideal gas law will be used by default.","category":"page"},{"location":"scenarios/#Thermal-Properties","page":"Release Scenarios","title":"Thermal Properties","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"The latent_heat, the gas_heat_capacity, and the liquid_heat_capacity can either be constants or be given as functions of temperature.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Suppose we want a more complete model of propane, using some physical property correlations for the vapor pressure, liquid density, latent heat, and heat capacities (but still assuming an ideal gas).","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"using GasDispersion\n\n# vapor pressure curve, Perry's 8th edition\nfunction Pv(T)\n    C1 = 59.078\n    C2 = -3_492.6\n    C3 = -6.0669\n    C4 = 1.0919e-5\n    C5 = 2\n    lnP = C1 + C2/T + C3*log(T) + C4*T^C5\n    return exp(lnP)\nend\n\n# liquid density curve, Perry's 8th edition\nfunction ρl(T,P)\n    MW = 0.044096\n    C1 = 1.3757\n    C2 = 0.27453\n    C3 = 369.83\n    C4 = 0.29359\n    ρl = C1/( C2^(1 + (1 - T/C3)^C4) )\n    return ρl*MW*1000\nend\n\n# latent heat curve, Perry's 8th edition\nfunction LH(T)\n    MW = 0.044096\n    Tc = 369.83\n    C1 = 2.9209e7\n    C2 = 0.78237\n    C3 = -0.77319\n    C4 = 0.39246\n    C5 = 0\n    Tr = T/Tc\n    ΔHv = C1*(1-Tr)^(C2 + C3*Tr + C4*Tr^2 + C5*Tr^3)\n    return ΔHv/(MW*1000)\nend\n\n# gas heat capacity, Perry's 8th edition\nfunction cpg(T)\n    MW = 0.044096\n    C1 = 0.5192e5\n    C2 = 1.9245e5\n    C3 = 1.6265e3\n    C4 = 1.168e5\n    C5 = 723.6\n    Cp = C1 + C2*((C3/T)/sinh(C3/T))^2 + C4*((C5/T)/cosh(C5/T))^2\n    return Cp/(MW*1000)\nend\n\n# liquid heat capacity, Perry's 8th edition\nfunction cpl(T)\n    MW = 0.044096\n    Tc = 369.83\n    C1 = 62.983\n    C2 = 113_630\n    C3 = 633.21\n    C4 = -873.46\n    Tr = T/Tc\n    t = 1-Tr\n    Cp = C1^2/t + C2 - 2*C1*C3*t - C1*C4*t^2 - C3^2*t^3/3 - C3*C4*t^4/2 - C4^2*t^5/5\n    return Cp/(MW*1000)\nend\n\ns = Substance(name=\"propane\",\n              molar_weight=0.044096, # kg/mol\n              vapor_pressure=Pv,   \n              liquid_density=ρl,\n              k=1.142,\n              boiling_temp=231.02,   # K\n              latent_heat=LH,\n              gas_heat_capacity=cpg,\n              liquid_heat_capacity=cpl)\n\n# output\n\nSubstance: propane\n    MW: 0.044096 kg/mol\n    P_v: Pv Pa\n    ρ_g: 1.864931992847327 kg/m^3\n    ρ_l: ρl kg/m^3\n    T_ref: 288.15 K\n    P_ref: 101325.0 Pa\n    k: 1.142\n    T_b: 231.02 K\n    Δh_v: LH J/kg\n    Cp_g: cpg J/kg/K\n    Cp_l: cpl J/kg/K","category":"page"},{"location":"scenarios/#Releases","page":"Release Scenarios","title":"Releases","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"A release is defined using one of the release types, this is a container for the specific event being modeled. For example a horizontal jet of liquid is a type of release. It is independent of the specific substance and of the environment into which it is being released.","category":"page"},{"location":"scenarios/#Horizontal-Jets","page":"Release Scenarios","title":"Horizontal Jets","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"HorizontalJet","category":"page"},{"location":"scenarios/#GasDispersion.HorizontalJet","page":"Release Scenarios","title":"GasDispersion.HorizontalJet","text":"HorizontalJet{<:Number}(;kwargs...)<:Release\n\nA simple container for parameters of a horizontal jet release.\n\nArguments\n\nmass_rate::Number: the mass emission rate of the substance, kg/s.\nduration::Number: the duration of the release, s.\ndiameter::Number: the diameter of the jet, m.\nvelocity::Number: the average velocity of the jet, m/s.\nheight::Number: the height of the jet center, m.\npressure::Number: the pressure at the jet exit, Pa.\ntemperature::Number: the temperature at the jet exit, K.\nfraction_liquid::Number: the fraction of the release that is liquid (for gas liquid mixtures), vol fraction.\n\n\n\n\n\n","category":"type"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"A horizontal jet is a jet of fluid, generally assumed to be perfectly horizontal, with a constant mass emission rate over a fixed duration.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"For example, suppose the release scenario is a horizontal liquid jet of propane, at the boiling point of propane, being emitted from a 10mm hole situated 1m above the ground. The release could look something like this:","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"using GasDispersion\n\nr = HorizontalJet(mass_rate=0.246,    # kg/s\n                  duration=10,        # s\n                  diameter=0.01,      # m\n                  velocity=5.41,      # m/s\n                  height=1,           # m\n                  pressure=101325,    # Pa\n                  temperature=233.19, # K\n                  fraction_liquid=1.0)\n\n# output\n\nHorizontalJet release:\n    ṁ: 0.246 kg/s\n    Δt: 10.0 s\n    d: 0.01 m\n    u: 5.41 m/s\n    h: 1.0 m\n    P: 101325.0 Pa\n    T: 233.19 K\n    f_l: 1.0\n\n","category":"page"},{"location":"scenarios/#Vertical-Jets","page":"Release Scenarios","title":"Vertical Jets","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"VerticalJet","category":"page"},{"location":"scenarios/#GasDispersion.VerticalJet","page":"Release Scenarios","title":"GasDispersion.VerticalJet","text":"VerticalJet{<:Number}(;kwargs...)<:Release\n\nA simple container for parameters of a vertical jet release.\n\nArguments\n\nmass_rate::Number: the mass emission rate of the substance, kg/s.\nduration::Number: the duration of the release, s.\ndiameter::Number: the diameter of the jet, m.\nvelocity::Number: the average velocity of the jet, m/s.\nheight::Number: the height of the jet center, m.\npressure::Number: the pressure at the jet exit, Pa.\ntemperature::Number: the temperature at the jet exit, K.\nfraction_liquid::Number: the fraction of the release that is liquid (for gas liquid mixtures), vol fraction.\n\n\n\n\n\n","category":"type"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Similarly a vertical jet is a jet of fluid being emitted directly upward, with a constant mass emission rate over a fixed duration.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"For example, supposing the same release scenario as above, but with the liquid jet of propane directed upwards:","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"using GasDispersion\n\nr = VerticalJet(mass_rate=0.246,    # kg/s\n                duration=10,        # s\n                diameter=0.01,      # m\n                velocity=5.41,      # m/s\n                height=1,           # m\n                pressure=101325,    # Pa\n                temperature=233.19, # K\n                fraction_liquid=1.0)\n\n# output\n\nVerticalJet release:\n    ṁ: 0.246 kg/s\n    Δt: 10.0 s\n    d: 0.01 m\n    u: 5.41 m/s\n    h: 1.0 m\n    P: 101325.0 Pa\n    T: 233.19 K\n    f_l: 1.0\n\n","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Since a release is often a function of the substance and, potentially, the atmosphere, it is more commonly generated using the scenario builder. Though for convenience they can be created directly, for example when replicating the results of modeling done with other tools.","category":"page"},{"location":"scenarios/#Atmospheres","page":"Release Scenarios","title":"Atmospheres","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"SimpleAtmosphere","category":"page"},{"location":"scenarios/#GasDispersion.SimpleAtmosphere","page":"Release Scenarios","title":"GasDispersion.SimpleAtmosphere","text":"SimpleAtmosphere{<:Number,<:StabilityClass}(kwargs...)<:Atmosphere\n\nA simple model of the atmosphere.\n\nArguments\n\npressure::Number=101325: atmospheric pressure, Pa\ntemperature::Number=298.15: ambient pressure, K\nwindspeed::Number=1.5: windspeed at anemometer height, m/s\nwindspeed_height::Number=10: anemometer height, m\nrel_humidity::Number=0: relative humidity, %\nstability::StabilityClass=ClassF: Pasquill-Gifford stability class\n\n\n\n\n\n","category":"type"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"The atmosphere defines the atmospheric conditions, and structure, for the release scenario. The default atmosphere is dry air at 25C and 1atm with a windspeed of 1.5m/s and a class F Pasquill-Gifford stability.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"using GasDispersion\n\na = SimpleAtmosphere()\n\n# output\n\nSimpleAtmosphere atmosphere:\n    P: 101325.0 Pa\n    T: 298.15 K\n    u: 1.5 m/s\n    h: 10.0 m\n    rh: 0.0 %\n    stability: ClassF\n","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"A SimpleAtmosphere has several non-editable default values, defined when used with more complex dispersion models:","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"the surface roughness z_R is 1m\nthe stability parameter for Briggs' plume rise model uses default values for the potential temperature gradient of 0.020K/m for class E stability and 0.035K/m for class F stability(US EPA 1995, 1-9)","category":"page"},{"location":"scenarios/#Stability-Class","page":"Release Scenarios","title":"Stability Class","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"The stability classes are of type StabilityClass and are used, internally, for function dispatch. They are ClassA through ClassF. For example, to create an atmosphere with the default properties but ClassD stability:","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"using GasDispersion\n\na = SimpleAtmosphere(stability=ClassD)\n\n# output\n\nSimpleAtmosphere atmosphere:\n    P: 101325.0 Pa\n    T: 298.15 K\n    u: 1.5 m/s\n    h: 10.0 m\n    rh: 0.0 %\n    stability: ClassD\n","category":"page"},{"location":"scenarios/#Windspeed","page":"Release Scenarios","title":"Windspeed","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"The wind profile for a SimpleAtmosphere is calculated from the given windspeed and reference height (anemometer height) using a power law relation. The windspeed, u, at the release height, h, is given by","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":" u = u_R left( h over h_R right)^alpha","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Where u_R is the reference windspeed set for the SimpleAtmosphere and h_R is the reference height for that windspeed (i.e. the anemometer height). The parameter alpha is tabulated based on stability class. The default values are given below, additional correlations are provided, see equation sets for more details.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Stability Class alpha\nA 0.108\nB 0.112\nC 0.120\nD 0.142\nE 0.203\nF 0.253","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"For a reference windspeed of 1.5m/s at 10m this looks like:","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"using ..GasDispersion\nusing Plots\n\nu0, z0 = 1.5, 10\nzs = 0:1:50\n\np1 = plot(ylabel=\"Elevation, m\", xlabel=\"Windspeed, m/s\")\n\nfor class in [ClassA,ClassB,ClassC,ClassD,ClassE,ClassF]\n    u = [ GasDispersion._windspeed(u0,z0,z,class,DefaultSet) for z in zs ]\n    plot!(p1,u,zs,label=class)\nend\n\nsavefig(p1,\"default_windspeed.svg\")\n\nnothing","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"(Image: )","category":"page"},{"location":"scenarios/#Scenarios","page":"Release Scenarios","title":"Scenarios","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Scenario","category":"page"},{"location":"scenarios/#GasDispersion.Scenario","page":"Release Scenarios","title":"GasDispersion.Scenario","text":"Scenario{<:Substance,<:Release,<:Atmosphere}(s<:Substance,r<:Release,a<:Atmosphere=SimpleAtmosphere())\n\nA chemical release scenario.\n\n\n\n\n\n","category":"type"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"The Scenario container simply collects together the Substance, Release, and Atmosphere in a re-usable way and with a consistent interface.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"\nusing GasDispersion\n\ns = Substance(name=\"propane\",\n              molar_weight=0.044096,     # kg/mol\n              liquid_density=526.13,     # kg/m³\n              boiling_temp=231.02,       # K\n              latent_heat=425740,        # J/kg\n              gas_heat_capacity=1678,    # J/kg/K\n              liquid_heat_capacity=2520) # J/kg/K\n\nr = HorizontalJet(mass_rate=0.246,    # kg/s\n                  duration=10,        # s\n                  diameter=0.01,      # m\n                  velocity=5.41,      # m/s\n                  height=1,           # m\n                  pressure=101325,    # Pa\n                  temperature=233.19, # K\n                  fraction_liquid=1.0)\n\nscn = Scenario(s,r)\n\n# output\n\nSubstance: propane\n    MW: 0.044096 kg/mol\n    P_v: GasDispersion.Antoine{Float64}(9.773719865868816, 2257.9247634130143, 0.0) Pa\n    ρ_g: 1.864931992847327 kg/m^3\n    ρ_l: 526.13 kg/m^3\n    T_ref: 288.15 K\n    P_ref: 101325.0 Pa\n    k: 1.4\n    T_b: 231.02 K\n    Δh_v: 425740 J/kg\n    Cp_g: 1678 J/kg/K\n    Cp_l: 2520 J/kg/K\nHorizontalJet release:\n    ṁ: 0.246 kg/s\n    Δt: 10.0 s\n    d: 0.01 m\n    u: 5.41 m/s\n    h: 1.0 m\n    P: 101325.0 Pa\n    T: 233.19 K\n    f_l: 1.0\nSimpleAtmosphere atmosphere:\n    P: 101325.0 Pa\n    T: 298.15 K\n    u: 1.5 m/s\n    h: 10.0 m\n    rh: 0.0 %\n    stability: ClassF\n\n","category":"page"},{"location":"scenarios/#Scenario-Builder","page":"Release Scenarios","title":"Scenario Builder","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"scenario_builder","category":"page"},{"location":"scenarios/#GasDispersion.scenario_builder","page":"Release Scenarios","title":"GasDispersion.scenario_builder","text":"scenario_builder(substance::Substance, source::SourceModel, atmosphere::Atmosphere)\n\nBuilds a scenario given a substance, source model and an atmosphere. If no atmosphere is given defaults to dry air at ambient conditions and class F stability.\n\n\n\n\n\n","category":"function"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Constructiong scenarios by hand can be incredibly tedious, the scenario_builder function is intended to help with this. It generates release scenarios for common situations given minimal input.","category":"page"},{"location":"scenarios/#Horizontal-Jets-2","page":"Release Scenarios","title":"Horizontal Jets","text":"","category":"section"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"scenario_builder(::Substance, ::Type{JetSource}, ::Atmosphere)","category":"page"},{"location":"scenarios/#GasDispersion.scenario_builder-Tuple{Substance, Type{JetSource}, Atmosphere}","page":"Release Scenarios","title":"GasDispersion.scenario_builder","text":"scenario_builder(substance::Substance, JetSource, atmosphere::Atmosphere; kwargs...)\n\nReturns returns a scenario for a simple jet from a circular hole. The jet can either be a liquid or a gas (in which case it is assumed to be an ideal gas and the jet is isentropic).\n\nReferences\n\nAIChE/CCPS. 1999. Guidelines for Consequence Analysis of Chemical Releases. New York: American Institute of Chemical Engineers\n\nArguments\n\nphase=:liquid: the phase, either :liquid or :gas\ndischargecoef::Number=0.61: the discharge coefficient cd\ndiameter::Number: the diameter of the hole, m\nheight::Number: the height of the hole, m\npressure::Number: the pressure upstream of the jet, Pa\ntemperature::Number: the temperature upstream of the jet, K\nduration::Number: the duration of the leak, s\n\n\n\n\n\n","category":"method"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"A release of a fluid from a storage vessel is often modeled as a jet. Given a substance and an atmosphere, scenario_builder will generate the corresponding release for either a liquid or gaseous jet.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"When a liquid jet is selected the Bernoulli equation is used(AIChE/CCPS 1999, 26):","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"u_j = c_d  sqrt 2 left( P_1 - P_2 over rho_l right) ","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"When a gaseous jet is selected a modified Bernoulli equation for an ideal gas exiting through an isentropic nozzle is used(AIChE/CCPS 1999, 30), for non-choked flow:","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":" G = rho u = c_d sqrt rho_1 P_1 left( 2 k over k-1 right) left left(P_2 over P_1right)^2 over k - left(P_2 over P_1right)^k+1 over k right","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"and for choked flow:","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":" G = c_d sqrt rho_1 P_1 k left( 2 over k+1 right)^k+1 over k-1  ","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"where flow is choked when:","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"left(P_2 over P_1 right) lt left( 2 over k+1 right)^k over k-1","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"The relations for isentropic flow of an ideal gas are used to calculate the release temperature, and pressure as well.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"The jet orifice is assumed to be a circular hole with a default discharge coefficient of 0.63.","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Suppose we are evaluating the consequences of a leak from a propane storage tank. For the purposes of this suppose it is liquid propane. The leak is from a 10mm hole situated 1m above the ground and the tank head-space is pressurized to 0.1barg with 2m of liquid propane above the hole. Assume the propane is at it's boiling point. This scenario is adapted from CCPS Guidelines for Consequence Analysis of Chemical Releases(AIChE/CCPS 1999, 40).","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"First we define the substance, propane","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"\nusing GasDispersion\n\ns = Substance(name=\"propane\",\n              molar_weight=0.044096,     # kg/mol\n              liquid_density=526.13,     # kg/m³\n              boiling_temp=231.02,       # K\n              latent_heat=425740,        # J/kg\n              gas_heat_capacity=1678,    # J/kg/K\n              liquid_heat_capacity=2520) # J/kg/K","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Then we determine the pressure at the hole, which is simply the pressure in the tank head space plus the liquid head above the hole","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"P_atm = 101325 # Pa\nP_head = 0.1e5 # 0.1 barg\n\ng  = 9.80616 # m/s^2, gravitational acceleration\nhₗ = 2 # m, height of liquid above the hole\n\nP1_gauge = P_head + s.ρ_l*g*hₗ\nP1 = P1_gauge + P_atm","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"Finally the scenario, with a default atmosphere, is generated by","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"scn = scenario_builder(s, JetSource; \n       phase = :liquid, # a liquid jet \n       diameter = 0.01, # m\n       pressure = P1, # Pa\n       temperature = s.T_b, # K\n       height = 1.0) # m, height of hole above the ground\n\n# output\n\nSubstance: propane\n    MW: 0.044096 kg/mol\n    P_v: GasDispersion.Antoine{Float64}(9.773719865868816, 2257.9247634130143, 0.0) Pa\n    ρ_g: 1.864931992847327 kg/m^3\n    ρ_l: 526.13 kg/m^3\n    T_ref: 288.15 K\n    P_ref: 101325.0 Pa\n    k: 1.4\n    T_b: 231.02 K\n    Δh_v: 425740 J/kg\n    Cp_g: 1678 J/kg/K\n    Cp_l: 2520 J/kg/K\nHorizontalJet release:\n    ṁ: 0.22879112394689263 kg/s\n    Δt: Inf s\n    d: 0.01 m\n    u: 5.536766702023982 m/s\n    h: 1.0 m\n    P: 101325.0 Pa\n    T: 231.02 K\n    f_l: 1.0\nSimpleAtmosphere atmosphere:\n    P: 101325.0 Pa\n    T: 298.15 K\n    u: 1.5 m/s\n    h: 10.0 m\n    rh: 0.0 %\n    stability: ClassF\n\n","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"If, instead, we wish to model the release from the top of the storage vessel, where the propane is a gas, say at a height of 3.5m, the scenario would be generated by","category":"page"},{"location":"scenarios/","page":"Release Scenarios","title":"Release Scenarios","text":"scn = scenario_builder(s, JetSource; \n       phase = :gas, # an isentropic ideal gas jet\n       diameter = 0.01, # m\n       pressure = P_head+P_atm, # Pa\n       temperature = s.T_b, # K\n       height = 3.5) # m, height of hole above the ground\n\n# output\n\nSubstance: propane\n    MW: 0.044096 kg/mol\n    P_v: GasDispersion.Antoine{Float64}(9.773719865868816, 2257.9247634130143, 0.0) Pa\n    ρ_g: 1.864931992847327 kg/m^3\n    ρ_l: 526.13 kg/m^3\n    T_ref: 288.15 K\n    P_ref: 101325.0 Pa\n    k: 1.4\n    T_b: 231.02 K\n    Δh_v: 425740 J/kg\n    Cp_g: 1678 J/kg/K\n    Cp_l: 2520 J/kg/K\nHorizontalJet release:\n    ṁ: 0.010634767194389562 kg/s\n    Δt: Inf s\n    d: 0.01 m\n    u: 56.66660301903551 m/s\n    h: 3.5 m\n    P: 101325.0 Pa\n    T: 224.8902857468354 K\n    f_l: 0.0\nSimpleAtmosphere atmosphere:\n    P: 101325.0 Pa\n    T: 298.15 K\n    u: 1.5 m/s\n    h: 10.0 m\n    rh: 0.0 %\n    stability: ClassF\n","category":"page"},{"location":"function_index/#Function-Index","page":"Function Index","title":"Function Index","text":"","category":"section"},{"location":"function_index/","page":"Function Index","title":"Function Index","text":"","category":"page"},{"location":"#GasDispersion.jl","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"","category":"section"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"GasDispersion.jl is a set of tools for atmospheric dispersion modeling of gaseous releases, such as might occur during an emergency at a chemical plant or more  routinely from a stack. This is intended to be the level of disperson modeling used support consequence analysis or QRA such as is described in Lee's Loss Prevention in the Process Industries or the CCPS Guidelines for Consequence Analysis of Chemical Releases.","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"Pages = [\"scenarios.md\", \"plume.md\", \"puff.md\", \"equation_sets.md\", \"function_index.md\"]\nDepth = 2","category":"page"},{"location":"#Installation","page":"GasDispersion.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"GasDispersion.jl can be installed using Julia's built-in package manager. In a Julia session, enter the package manager mode by hitting ], then run the command","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"pkg> add https://github.com/aefarrell/GasDispersion.jl","category":"page"},{"location":"#Example-usage","page":"GasDispersion.jl","title":"Example usage","text":"","category":"section"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"note: Worked examples\nThis is just a brief overview, detailed worked examples are available as jupyter notebooks","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"This scenario is adapted from CCPS Guidelines for Consequence Analysis of Chemical Releases, CCPS, pg 47.","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"Suppose we wish to model the dispersion of gaseous propane from a leak from a storage  tank, where the leak is from a 10 mm hole that is 3.5 m above the ground and the  propane is at 25°C and 4barg. Assume the discharge coefficient c_D = 085","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"For ambient conditions we assume the atmosphere is dry air at standard conditions of 1atm and 25°C, with a windspeed of 1.5m/s and class F stability (a \"worst case\" atmospheric stability)","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"using GasDispersion\n\npropane = Substance(name = :propane,\n                    gas_density = 9.7505, # kg/m^3, NIST Webbook\n                    liquid_density = 526.13, # kg/m^3, NIST Webbook\n                    reference_temp= 298.15, # K\n                    reference_pressure= 501325, # Pa\n                    boiling_temp = 231.04, # K, NIST Webbook\n                    latent_heat = 425740.0, # J/kg, \n                    gas_heat_capacity = 1678.0, # J/kg/K, \n                    liquid_heat_capacity = 2520.0) # J/kg/K, \n\nscn = scenario_builder(propane, JetSource;\n       phase = :gas,\n       diameter = 0.01, # m\n       dischargecoef = 0.85,\n       k = 1.15,         # heat capacity ratio, from Crane's\n       temperature = T1, # K\n       pressure = P1,    # Pa\n       height = 3.5,     # m, height of hole above the ground\n       duration = 1)     # s, duration of release","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"This generates a Scenario defined for a gas jet discharging into dry air at standard conditions. Once we have this defined we can determine the concentration at any point downwind of the release point, assuming the release is a continuous plume, using","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"# returns a callable\npl = plume(scn, GaussianPlume)\n\npl(x,y,z) # gives the concentration in vol fraction at the point x, y, z","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"where the coordinate system is such that the release point is at x=0, y=0, z=h","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"Similarly we could model an instantaneous release, assuming all of the mass was released during 1 second, using a \"puff\" model","category":"page"},{"location":"","page":"GasDispersion.jl","title":"GasDispersion.jl","text":"# returns a function\npf = puff(scn, GaussianPuff)\n\np(x,y,z,t) # gives the concentration in vol fraction at the point x, y, z and time t","category":"page"},{"location":"puff/#Puff-Models","page":"Puff Models","title":"Puff Models","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Puff models are for \"instantaneous\" releases or other time-dependent releases.","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"puff","category":"page"},{"location":"puff/#GasDispersion.puff","page":"Puff Models","title":"GasDispersion.puff","text":"puff(scenario::Scenario, model::PuffModel[, equationset::EquationSet])\n\nRuns the puff dispersion model on the given scenario and returns the solution which is callable to give the concentration     c(x, y, z, t)\n\nThe concentration is in vol fraction, if model is unspecified, defaults to a simple gaussian puff.\n\nequationsets are used to specify that an alternative set of correlations  should be used for model parameters, if alternatives exist.\n\nAll model parameters are assumed to be in SI base units (i.e. distances in m, velocities in m/s, mass in kg, etc.)\n\n\n\n\n\n","category":"function"},{"location":"puff/#Gaussian-Puffs","page":"Puff Models","title":"Gaussian Puffs","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"puff(::Scenario, ::Type{GaussianPuff})","category":"page"},{"location":"puff/#GasDispersion.puff-Tuple{Scenario, Type{GaussianPuff}}","page":"Puff Models","title":"GasDispersion.puff","text":"puff(::Scenario, GaussianPuff[, ::EquationSet])\n\nReturns the solution to a Gaussian puff dispersion model for the given scenario.\n\ncleft(xyztright) = Q_ij Delta t\n  exp left( -frac12 left( x - u t  over sigma_x right)^2 right)  over  sqrt2pi sigma_x  \n  exp left( -frac12 left( y over sigma_y right)^2 right)  over  sqrt2pi sigma_y  \ntimes   exp left( -frac12 left( z - h over sigma_z right)^2 right)\n+ exp left( -frac12 left( z + h over sigma_z right)^2 right)  over  sqrt2pi sigma_z  \n\nwhere the σs are dispersion parameters correlated with the distance x. The  EquationSet defines the set of correlations used to calculate the dispersion  parameters and windspeed.\n\nReferences\n\nAIChE/CCPS. 1999. Guidelines for Consequence Analysis of Chemical Releases. New York: American Institute of Chemical Engineers\n\n\n\n\n\n","category":"method"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"A gaussian puff model assumes the release is instantaneous, and all mass is concentrated in a single point. The cloud then disperses as it moves downwind with the concentration profile is given by a series of gaussians with dispersions sigma_x, sigma_y, and sigma_z, which are found from correlations tabulated per stability class. Similarly to the plume model, a ground reflection term is included to correct for the fact that material cannot pass through the ground.","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"c_puff =  V_i over  (2 pi)^32 sigma_x sigma_y sigma_z   \nexp left( -frac12 left( x - ut over sigma_x right)^2 right) \nexp left( -frac12 left( y over sigma_y right)^2 right)  left exp left( -frac12 left( z - h over sigma_z right)^2 right) \n+ exp left( -frac12 left( z + h over sigma_z right)^2 right)right","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"with","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"c - concentration, volume fraction\nV_i - volume of released material, m^3\nu - windspeed, m/s\nsigma_x  - downwind dispersion, m\nsigma_y  - crosswind dispersion, m\nsigma_z  - vertical dispersion, m\nh - release elevation, m","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"The model assumes the initial release is a single point, with no dimensions. Unlike the plume model, this concentration is a function of time.","category":"page"},{"location":"puff/#Downwind-dispersion-correlations","page":"Puff Models","title":"Downwind dispersion correlations","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"The downwind dispersion, sigma_x is a function of downwind distance of the cloud center, x_c, as well as stability class","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"sigma_x = delta x_c^beta","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Where delta and beta are identical to those tabulated for the crosswind dispersion.","category":"page"},{"location":"puff/#Crosswind-dispersion-correlations","page":"Puff Models","title":"Crosswind dispersion correlations","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"The crosswind dispersion, sigma_y is a function of downwind distance of the cloud center, x_c, as well as stability class","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"sigma_y = delta x_c^beta","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Where delta, beta, and gamma are tabulated based on stability class(AIChE/CCPS 1999):","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Stability Class delta beta\nA 0.18 0.92\nB 0.14 0.92\nC 0.10 0.92\nD 0.06 0.92\nE 0.04 0.92\nF 0.02 0.89","category":"page"},{"location":"puff/#Vertical-dispersion-correlations","page":"Puff Models","title":"Vertical dispersion correlations","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"The vertical dispersion, sigma_z is a function of downwind distance of the cloud center, x_c, as well as stability class","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":" sigma_z = delta x_c^beta ","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Where delta and beta are tabulated based on stability class(AIChE/CCPS 1999):","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Stability Class delta beta\nA 0.60 0.75\nB 0.53 0.73\nC 0.34 0.71\nD 0.15 0.70\nE 0.10 0.65\nF 0.05 0.61","category":"page"},{"location":"puff/#Example","page":"Puff Models","title":"Example","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Suppose we wish to model the dispersion of gaseous propane from a leak from a storage tank, where the leak is from a 10mm hole that is 3.5m above the ground and the propane is at 25°C and 4barg. Assume the discharge coefficient c_D = 085. Assume the leak occurs for 10s. This scenario is adapted from CCPS Guidelines for Consequence Analysis of Chemical Releases(AIChE/CCPS 1999, 47)","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"First we define the scenario","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"using GasDispersion\n\npropane = Substance(name=\"propane\",\n              molar_weight=0.044096,     # kg/mol\n              liquid_density=526.13,     # kg/m³\n              k=1.142,\n              boiling_temp=231.02,       # K\n              latent_heat=425740,        # J/kg\n              gas_heat_capacity=1678,    # J/kg/K\n              liquid_heat_capacity=2520) # J/kg/K\n\nPatm = 101325 # Pa\nP1 = 4e5 + Patm # Pa\nT1 = 25 + 273.15 # K\n\nscn = scenario_builder(propane, JetSource; \n       phase = :gas,\n       diameter = 0.01,  # m\n       dischargecoef = 0.85,\n       temperature = T1, # K\n       pressure = P1,    # Pa\n       height = 3.5,     # m, height of hole above the ground\n       duration = 10)    # s, duration of leak","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"And then pass it to the puff function","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"g = puff(scn, GaussianPuff)","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Where g is a callable which returns the concentration (in vol fraction) at any point. For example suppose we are interested in the concentration at some point 100m downwind of the release, along the centerline (y=0) and at a height of 2m, amd 86s after the start of the release.","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"g(100,0,2,86)\n\n# output\n\n0.0011119744194086872\n","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"using ..GasDispersion\n\npropane = Substance(name=\"propane\",\n              molar_weight=0.044096,     # kg/mol\n              liquid_density=526.13,     # kg/m³\n              k=1.142,\n              boiling_temp=231.02,       # K\n              latent_heat=425740,        # J/kg\n              gas_heat_capacity=1678,    # J/kg/K\n              liquid_heat_capacity=2520) # J/kg/K\n\nPatm = 101325 # Pa\nP1 = 4e5 + Patm # Pa\nT1 = 25 + 273.15 # K\n\nscn = scenario_builder(propane, JetSource; \n       phase = :gas,\n       diameter = 0.01,  # m\n       dischargecoef = 0.85,\n       temperature = T1, # K\n       pressure = P1,    # Pa\n       height = 3.5,     # m, height of hole above the ground\n       duration = 10)    # s, duration of leak\n\ng = puff(scn, GaussianPuff)\n","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"using Plots\n\nplot(g, 86; xlims=(90,110), ylims=(-10,10), aspect_ratio=:equal)\n","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Using the @gif macro we can animate the arrival of the puff, visualizing how the cloud expands as it moves","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"t = 86\n\n@gif for t′ in range(0.85*t,1.15*t, length=50)\n\nplot(g, t′; xlims=(85,115), ylims=(-10,10), clims=(0,1.5e-3), aspect_ratio=:equal)\n    \nend","category":"page"},{"location":"puff/#Integrated-Gaussian-Puffs","page":"Puff Models","title":"Integrated Gaussian Puffs","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"puff(::Scenario, ::Type{IntPuff})","category":"page"},{"location":"puff/#GasDispersion.puff-Tuple{Scenario, Type{IntPuff}}","page":"Puff Models","title":"GasDispersion.puff","text":"puff(::Scenario, IntPuff[, ::EquationSet]; kwargs...)\n\nReturns the solution to an integrated Gaussian dispersion model, where the release is modeled as a sequence of Gaussian puffs, for the given scenario.\n\ncleft(xyztright) = sum_i^n-1  Q_ij Delta t over n \n  exp left( -frac12 left( x - u left( t - i delta t right)  over sigma_x right)^2 right)  over  sqrt2pi sigma_x  \n  exp left( -frac12 left( y over sigma_y right)^2 right)  over  sqrt2pi sigma_y  \ntimes   exp left( -frac12 left( z - h over sigma_z right)^2 right)\n+ exp left( -frac12 left( z + h over sigma_z right)^2 right)  over  sqrt2pi sigma_z  \n\nwhere δt is Δt/n, and the σs are dispersion parameters correlated with the distance x. The EquationSet defines the set of correlations used to calculate the dispersion parameters and windspeed.\n\nArguments\n\nn::Integer: the number of discrete gaussian puffs, defaults to infinity\n\n\n\n\n\n","category":"method"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"The IntPuff model treats a release as a sequence of n gaussian puffs, each one corresponding to frac1n of the total mass of the release.","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"cleft(xyztright) = sum_i^n-1  Q_i Delta t over n    exp left( -frac12 left( x - u left( t - i delta t right)  over sigma_x right)^2 right)  over  sqrt2pi sigma_x     exp left( -frac12 left( y over sigma_y right)^2 right)  over  sqrt2pi sigma_y   times   exp left( -frac12 left( z - h over sigma_z right)^2 right) + exp left( -frac12 left( z + h over sigma_z right)^2 right)  over  sqrt2pi sigma_z  ","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"with ","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"c - concentration, volume fraction\nQ_i - emission rate, m^3/s\nDelta t - total duration, s\n$ \\delta t = {\\Delta t \\over n} $ - puff interval, s\nu - windspeed, m/s\nsigma_x - downwind dispersion, m\nsigma_y - crosswind dispersion, m\nsigma_z - downwind dispersion, m","category":"page"},{"location":"puff/#Dispersion-Parameters","page":"Puff Models","title":"Dispersion Parameters","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"The dispersion parameters are the same as used for the GaussianPlume model.","category":"page"},{"location":"puff/#Example-2","page":"Puff Models","title":"Example","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"Continuing with the propane leak example from above, we now model the release as a sequence of 100 gaussian puffs. Essentially chopping the 10s over which the release happens into 0.1s intervals and releasing one puff per interval at a time for 10s.","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"ig = puff(scn, IntPuff; n=100)","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"At the same point as above the concentration has dropped","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"ig(100,0,2,86)\n\n# output\n\n8.260636961901386e-5\n","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"ig = puff(scn, IntPuff; n=100)","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"\nplot(ig, 86; xlims=(90,110), ylims=(-10,10), aspect_ratio=:equal)\n","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"For short duration releases the model approximates the integral when n to infty this is the default behaviour or when n=Inf","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"ig_inf = puff(scn, IntPuff)\n\nplot(ig_inf, 86; xlims=(90,110), ylims=(-10,10), aspect_ratio=:equal)","category":"page"},{"location":"puff/#Britter-McQuaid-Model","page":"Puff Models","title":"Britter-McQuaid Model","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"puff(::Scenario, ::Type{BritterMcQuaidPuff})","category":"page"},{"location":"puff/#GasDispersion.puff-Tuple{Scenario, Type{BritterMcQuaidPuff}}","page":"Puff Models","title":"GasDispersion.puff","text":"puff(scenario::Scenario, BritterMcQuaidPuff[, equationset::EquationSet])\n\nReturns the solution to the Britter-McQuaid instantaneous ground level release model for the given scenario.\n\nThe equationset is used to calculate the windspeed at 10m, all other  correlations are as per the Britter-McQuaid model. Unless otherwise specified a default power-law wind profile is used.\n\nReferences\n\nBritter, Rex E. and J. McQuaid. 1988. Workbook on the Dispersion of Dense Gases. HSE Contract Research Report No. 17/1988\nAIChE/CCPS. 1999. Guidelines for Consequence Analysis of Chemical Releases. New York: American Institute of Chemical Engineers\n\n\n\n\n\n","category":"method"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"The Britter-McQuaid model is an empirical correlation for dense cloud dispersion. The model generates an interpolation function for the average cloud concentration and the cloud is rendered as a cylinder.","category":"page"},{"location":"puff/#SLAB-Horizontal-Jet-Model","page":"Puff Models","title":"SLAB Horizontal Jet Model","text":"","category":"section"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"puff(::Scenario, ::Type{SLAB})","category":"page"},{"location":"puff/#GasDispersion.puff-Tuple{Scenario, Type{SLAB}}","page":"Puff Models","title":"GasDispersion.puff","text":"puff(::Scenario, SLAB; kwargs...)\n\nReturns the solution to the SLAB horizontal jet dispersion model for the given scenario.\n\nReferences\n\nErmak, Donald L. 1990. User's Manual for SLAB: An Atmospheric Dispersion Model For Denser-Than-Air Releases Lawrence Livermore National Laboratory\n\nArguments\n\nt_av::Number=10: averaging time, seconds\nx_max::Number=2000: maximum downwind distance, meters, this defines the problem domain\n\n\n\n\n\n","category":"method"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"The SLAB horizontal jet model is derived from the SLAB software package developed by Donald L. Ermak at Lawrence Livermore National Laboratory. The model numerically integrates a set of conservation equations for the given domain, automatically transitioning from a steady-state plume model to a transient-state puff model as the release terminates. The result is a set of cloud parameters that are interpolated as a function of downwind distance and time to calculate the final concentration.","category":"page"},{"location":"puff/","page":"Puff Models","title":"Puff Models","text":"The SLAB model uses it's own built in models for atmospheric parameters, such as windspeed and dispersion.","category":"page"}]
}
